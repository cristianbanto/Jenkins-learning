pipeline {
    agent any

    environment {
        AWS_S3_BUCKET = 'security-test-bucket-cristi'
        AWS_DEFAULT_REGION = 'eu-west-1'
        REPO_DIR = "${JENKINS_HOME}/workspace/${JOB_NAME}/repo"
    }

    stages {
        stage('Clone or Update Git Repository') {
            steps {
                script {
                    // Verifică dacă repo-ul există deja
                    def repoExists = fileExists(REPO_DIR)

                    if (repoExists) {
                        // Dacă există, actualizează cu git pull
                        sh "cd ${REPO_DIR} && git pull"
                    } else {
                        // Dacă nu există, clonare inițială
                        sh "mkdir -p ${REPO_DIR}"
                        sh "git clone https://github.com/cristianbanto/Jenkins-learning.git ${REPO_DIR}"
                    }
                }
            }
        }

        stage('Security scan with ClamAV') {
            steps {
                script {
                    def timestamp = new Date().format("yyyyMMddHHmm")
                    def reportFileName = "clamav-report-${timestamp}.txt"
                    def localReportPath = "${JENKINS_HOME}/workspace/${JOB_NAME}/${BUILD_NUMBER}/${reportFileName}"
                    def localReportDir = localReportPath.replaceAll("/[^/]+\$", "")

                    sh "mkdir -p ${localReportDir}"
                    sh "clamscan -r ${JENKINS_HOME}/workspace/${JOB_NAME}/repo > ${localReportPath}"
                    

                    sh "cat ${localReportPath}"
                }
            }
        }

        stage('Save report to S3') {
            steps {
                script {
                    def timestamp = new Date().format("yyyyMMddHHmm")
                    def reportFileNamePrefix = "clamav-report"
                    def localReportDir = "${JENKINS_HOME}/workspace/${JOB_NAME}/${BUILD_NUMBER}"

            // Copierea tuturor rapoartelor în S3 cu timestamp în nume
                    withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', credentialsId: 'aws_credentials', accessKeyVariable: 'AWS_ACCESS_KEY_ID', secretKeyVariable: 'AWS_SECRET_ACCESS_KEY']]) {
                        sh "aws s3 cp ${localReportDir}/${reportFileNamePrefix}* s3://${AWS_S3_BUCKET}/${BUILD_NUMBER}/${reportFileNamePrefix}-${timestamp}/"
            }
        }
    }
}     
}